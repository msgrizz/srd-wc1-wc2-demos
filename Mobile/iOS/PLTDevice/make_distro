XBUILD=/Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild
PROJECT_ROOT=.
PROJECT=$(PROJECT_ROOT)/PLTDevice.xcodeproj
TARGET=PLTDevice
BUILD=$(PROJECT_ROOT)/build

all: fat clean

#libi386.a:
#	$(XBUILD) -project $(PROJECT) -target $(TARGET) -sdk iphonesimulator -configuration Release clean build
#	-mv $(PROJECT_ROOT)/build/Release-iphonesimulator/lib$(TARGET).a $(BUILD)/$@

libArmv7.a:
	$(XBUILD) -project $(PROJECT) -target $(TARGET) -sdk iphoneos -arch armv7 -configuration Release clean build
	-mv $(PROJECT_ROOT)/build/Release-iphoneos/lib$(TARGET).a $(BUILD)/$@

libArmv7s.a:
	$(XBUILD) -project $(PROJECT) -target $(TARGET) -sdk iphoneos -arch armv7s -configuration Release clean build
	-mv $(PROJECT_ROOT)/build/Release-iphoneos/lib$(TARGET).a $(BUILD)/$@

libArm64.a:
	$(XBUILD) -project $(PROJECT) -target $(TARGET) -sdk iphoneos -arch arm64 -configuration Release clean build
	-mv $(PROJECT_ROOT)/build/Release-iphoneos/lib$(TARGET).a $(BUILD)/$@

#fat: libi386.a libArmv7.a libArmv7s.a libArm64.a
fat: libArmv7.a libArmv7s.a libArm64.a
	#lipo -create -output $(PROJECT_ROOT)/build/lib$(TARGET).a $^
	lipo -create -output $(PROJECT_ROOT)/build/lib$(TARGET).a $(BUILD)/libArmv7.a $(BUILD)/libArmv7s.a $(BUILD)/libArm64.a

clean:
	-rm -rf $(BUILD)/PLTDevice.build
	-rm -rf $(BUILD)/Release-iphoneos
	-rm -rf $(BUILD)/libArmv7.a
	-rm -rf $(BUILD)/libArmv7s.a
	-rm -rf $(BUILD)/libArm64.a
	
cleanAll: clean
	-rm -rf $(BUILD)